<Window x:Class="DxTBoxCore.BoxChoose.TreeSave"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        
        xmlns:local="clr-namespace:DxTBoxCore.BoxChoose"
        xmlns:lg="clr-namespace:DxTBoxCore.Languages"
        mc:Ignorable="d"
        Title="TreeChoose" Height="450" Width="800" Loaded="Window_Loaded"        
        >
    <Window.Resources>
        <!-- Vers la classe qui convertit -->
        <local:Conv_Type2IconEx x:Key="img" />

        <!-- Style des boutons -->
        <Style TargetType="Button">
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="MinWidth" Value="35"/>
        </Style>
        <!-- Style des box -->
        <Style TargetType="TextBox">
            <Setter Property="Margin" Value="0,5,0,5"/>
        </Style>
        <!-- Style des menuItem -->
        <!--<Style TargetType="MenuItem"
        -->

    </Window.Resources>
    <Grid Margin="30,15,30,15">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <TextBlock Text="{Binding Info, StringFormat='{}{0}:', FallbackValue=Info}" Margin="0,0,0,20" TextWrapping="WrapWithOverflow" />
        <TextBox x:Name="tbStartingFolder" Grid.Row="1" KeyDown="StartFolder_KeyDown" 
               
                        >
            <!--="{Binding StartingFolder, UpdateSourceTrigger=PropertyChanged,
                        TargetNullValue={x:Static lg:DxTBLang.Inf_LinkOrChoose},
                        FallbackValue={x:Static lg:DxTBLang.Inf_LinkOrChoose}}"                 -->
            <TextBox.Style>
                <Style TargetType="TextBox">
                    <Style.Triggers >
                        <Trigger Property="IsFocused" Value="False">
                            <Setter Property="Text" Value="{Binding StartingFolder, UpdateSourceTrigger=PropertyChanged,
                                TargetNullValue={x:Static lg:DxTBLang.Inf_LinkOrChoose},
                                FallbackValue={x:Static lg:DxTBLang.Inf_LinkOrChoose}}"/>

                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Text" Value="{Binding StartingFolder, UpdateSourceTrigger=PropertyChanged,
                                TargetNullValue={x:Null},
                                FallbackValue={x:Null}}"
                                    />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
        <TreeView Visibility="Hidden">

        </TreeView>
        <!--Loaded="FileTree_Loaded"-->
        <TreeView Grid.Row="2"  ItemsSource="{Binding Root}" SelectedItemChanged="SelectedItem">
            <TreeView.Resources>
                <Style TargetType="TreeViewItem">
                    <Setter Property="HeaderTemplate" >
                        <Setter.Value>
                            <DataTemplate >
                                <!--
                                -->
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="{Binding Path=Type, Converter={StaticResource img}}"
                                           RenderOptions.BitmapScalingMode="HighQuality"  
                                           MaxWidth="40"                                           
                                           />
                                    <TextBlock Text="{Binding Name}"
                                               ToolTip="{Binding Path}"
                                               Margin="5,30,0,0" />
                                </StackPanel>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ItemsSource" Value="{Binding Children}"/>
                    <!--
                    
                    -->
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded}"/>
                    <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                    <Setter Property="Focusable" Value="{Binding IsFocusable}"/>
                    <!-- Meme event -->
                    <EventSetter Event="Expanded" Handler="mee" />
                    <EventSetter Event="Collapsed" Handler="meeclose"/>
                </Style>
            </TreeView.Resources>
        </TreeView>

        <!--
        <TextBox x:Name="FilePath" Grid.Row="3" TextWrapping="Wrap"
                 Text="{Binding LinkResult}" Visibility="Collapsed"
                 IsReadOnly="True"
                 />-->
        <!-- Filtres, sélection -->
        <Grid Grid.Row="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition />
            </Grid.RowDefinitions>
            <Label Content="{x:Static lg:DxTBLang.File_Name}" ContentStringFormat="{}{0}:"/>
            <TextBox Text="{Binding FileValue}" Grid.Column="1"/>
        </Grid>
        <!-- Boutons -->
        <StackPanel Grid.Row="10" Orientation="Horizontal" HorizontalAlignment="Right" >
            <Button Content="{Binding CancelButtonName
                                , FallbackValue={x:Static lg:DxTBLang.Cancel}
                                , TargetNullValue={x:Static lg:DxTBLang.Cancel}
                                , RelativeSource={RelativeSource AncestorType=Window}}"
                    IsCancel="True" Click="btAnnul_Click" HorizontalAlignment="Right" />
            <Button  Content="{Binding SaveButtonName
                                , FallbackValue={x:Static lg:DxTBLang.Save}
                                , TargetNullValue={x:Static lg:DxTBLang.Save}
                                , RelativeSource={RelativeSource AncestorType=Window}}"
                     IsDefault="True" Click="btOk_Click"/>
        </StackPanel>
    </Grid>
</Window>
